<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Bad Fd</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Bad Fd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 01 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>算法笔记：跳表（r1）</title>
      <link>/posts/algmnotes-skiplist/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/algmnotes-skiplist/</guid>
      <description>&lt;p&gt;这是读书时一篇旧文搬运.几年后再次回顾下算法.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跳表是一种著名数据结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原理应该不用介绍了，rocksdb/redis内部都有使用skiplist。&lt;/p&gt;
&lt;p&gt;相对于红黑树，它的优势我认为是实现简单，并且容易无锁化。&lt;/p&gt;
&lt;p&gt;本文主要讨论：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法笔记：跳表（r2）</title>
      <link>/posts/algmnotes-skiplist-impl/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/algmnotes-skiplist-impl/</guid>
      <description>&lt;h2 id=&#34;实现一个简单skiplist&#34;&gt;实现一个简单skiplist&lt;/h2&gt;
&lt;p&gt;上一篇笔记里回顾了跳表的性质和思想，并且看了一眼rocksdb里的skiplist实现。&lt;/p&gt;
&lt;p&gt;然后由于好奇，我自己写了一个skiplist，这里记录下。&lt;/p&gt;
&lt;p&gt;该skiplist的特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持concurrent&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rocksdb探究 - 一些问题</title>
      <link>/posts/db_some_questions_about_rocksdb/</link>
      <pubDate>Tue, 07 Jan 2020 21:26:49 +0800</pubDate>
      
      <guid>/posts/db_some_questions_about_rocksdb/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;写请求batch内的多个操作是否会被拆开，为什么？&lt;/li&gt;
&lt;li&gt;block-cache里的缓存项是否会因为某个sst被compact而失效？&lt;/li&gt;
&lt;li&gt;event-listener的实现&lt;/li&gt;
&lt;li&gt;perf-context的实现&lt;/li&gt;
&lt;li&gt;ThreadLocalPtr的实现以及为什么&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43;服务端rpc笔记：读muduo有感</title>
      <link>/posts/cppnote-server_rpc_notes/</link>
      <pubDate>Sat, 01 Dec 2018 21:26:49 +0800</pubDate>
      
      <guid>/posts/cppnote-server_rpc_notes/</guid>
      <description>&lt;p&gt;最近比较详细地缕了一遍公司内部另一个团队的存储产品（基于apache thrift），后简称为A。到目前为止，本团队存储产品自研的rpc框架，加上自己写过一个简单rpc框架用于rdb实例分裂，已经接触了3个rpc框架。准备在这篇文章总结下一些个人感想。&lt;/p&gt;
&lt;h3 id=&#34;连接处理模型&#34;&gt;连接处理模型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A的服务端：使用thrift-rpc的nonblock-server，连接处理模型是同步的：
a. io线程在收到一个包后，会先把自己设为idle（具体点就是摘掉本线程上的可读写事件），扔给worker线程处理完成后再加回来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A的cli端的处理是同步的：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>智能指针1: shared_ptr使用梳理</title>
      <link>/posts/cppnotes-shared_ptr/</link>
      <pubDate>Sat, 01 Dec 2018 21:26:49 +0800</pubDate>
      
      <guid>/posts/cppnotes-shared_ptr/</guid>
      <description>&lt;p&gt;本文提及并讨论了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shared_ptr&lt;/code&gt;引入背景&lt;/li&gt;
&lt;li&gt;删除器&lt;/li&gt;
&lt;li&gt;线程安全性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::ref&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>算法笔记： 最长回文子串</title>
      <link>/posts/algmnotes-longestpalindrome/</link>
      <pubDate>Sat, 01 Dec 2018 21:26:49 +0800</pubDate>
      
      <guid>/posts/algmnotes-longestpalindrome/</guid>
      <description>&lt;p&gt;这是读书时一篇旧文搬运.几年后再次回顾下算法.&lt;/p&gt;
&lt;h3 id=&#34;描述&#34;&gt;描述&lt;/h3&gt;
&lt;p&gt;给定一个串，求它的最长回文子串。&lt;/p&gt;
&lt;h3 id=&#34;dp思路&#34;&gt;DP思路&lt;/h3&gt;
&lt;p&gt;DP的关键是梳理出问题与子问题的关系。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法笔记：计算1到n中2出现的个数</title>
      <link>/posts/algmnotes-count_2_of_a_number/</link>
      <pubDate>Fri, 01 Jun 2018 20:26:39 +0800</pubDate>
      
      <guid>/posts/algmnotes-count_2_of_a_number/</guid>
      <description>&lt;p&gt;这是读书时一篇旧文搬运.几年后再次回顾下算法.&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;p&gt;给定一个数字n，求1到n序列中2出现的总次数。n最大值可能是10^9。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;h3 id=&#34;暴力&#34;&gt;暴力&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>分布式笔记 - Raft（1）</title>
      <link>/posts/storage_deep_dive_for_raft/lec1/</link>
      <pubDate>Thu, 19 Apr 2018 21:20:49 +0000</pubDate>
      
      <guid>/posts/storage_deep_dive_for_raft/lec1/</guid>
      <description>&lt;h3 id=&#34;qa&#34;&gt;Q&amp;amp;A&lt;/h3&gt;
&lt;h5 id=&#34;线性一致性&#34;&gt;线性一致性？&lt;/h5&gt;
&lt;p&gt;个人认为，分布式系统的一致性与多核内存模型中涉及的一致性异曲同工，所以分布式系统的线性一致性我认为可以参考类似多核系统的线性一致性定义来理解。&lt;/p&gt;
&lt;h5 id=&#34;fsm-finite-state-machine&#34;&gt;&lt;code&gt;fsm: finite-state-machine&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;个人理解为有状态分布式服务的每个独立实例（进程+数据），本质上都可以是个有限状态机（fsm）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Todo list</title>
      <link>/posts/other_todolist/</link>
      <pubDate>Tue, 07 Nov 2017 02:26:41 +0800</pubDate>
      
      <guid>/posts/other_todolist/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pb使用总结:动态类型反射/non-copy&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运维总结:huge page&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运维总结:tcpdump抓包&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运维总结:tsar/sar/iotop/iostat/top/perf top&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; db笔记：lsm和btree的读/写放大分析&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>cheatsheet for FUW</title>
      <link>/posts/other_frequently-used-words/</link>
      <pubDate>Mon, 07 Nov 2016 21:20:49 +0000</pubDate>
      
      <guid>/posts/other_frequently-used-words/</guid>
      <description>&lt;h1 id=&#34;some-words-used-in-coding&#34;&gt;some words used in coding&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;toggle&lt;/li&gt;
&lt;li&gt;quote&lt;/li&gt;
&lt;li&gt;snippet&lt;/li&gt;
&lt;li&gt;typo&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>随想2</title>
      <link>/posts/other_thinkings/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>/posts/other_thinkings/</guid>
      <description>  下面是一个hugo图像处理的示意 代码为    .Resize &#34;300x&#34;       .Resize &#34;300x&#34;      随想1
  </description>
    </item>
    
    <item>
      <title>随想</title>
      <link>/posts/other_thoughts_about_life/</link>
      <pubDate>Tue, 20 Dec 2011 07:26:49 +0800</pubDate>
      
      <guid>/posts/other_thoughts_about_life/</guid>
      <description>&lt;h3 id=&#34;杂-1&#34;&gt;杂 1&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/288017836&#34;&gt;既然所有的生命都要死亡，那么生命的意义是什么？&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 bug 中寻找圆满&lt;/li&gt;
&lt;li&gt;冯伦被误诊为癌症，那是他第一次开始思考死亡，以前很重视的事情都变得轻了，最沉重的，还是生命。&lt;/li&gt;
&lt;li&gt;死亡带来意义，而非消解意义&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>启用一个新blog（Hugo试用）</title>
      <link>/posts/other_try-hugo/</link>
      <pubDate>Mon, 07 Nov 2011 21:26:49 +0800</pubDate>
      
      <guid>/posts/other_try-hugo/</guid>
      <description>&lt;h2 id=&#34;hugo-试用&#34;&gt;Hugo 试用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基本流程走通：post &amp;ndash; publish&lt;/li&gt;
&lt;li&gt;basic configs&lt;/li&gt;
&lt;li&gt;basic markdown&lt;/li&gt;
&lt;li&gt;config the markup(code pieces)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43; notes：recall of move-semantics and rvalue-reference</title>
      <link>/posts/cppnotes-move-semantics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/cppnotes-move-semantics/</guid>
      <description>&lt;p&gt;几年前，整理了一份rvalue相关笔记：&lt;a href=&#34;https://zhuanlan.zhihu.com/p/111826434&#34;&gt;以前的一份笔记&lt;/a&gt;，近期整理思绪时，发现某些问题还是没有弄清楚。&lt;/p&gt;
&lt;h2 id=&#34;universal-reference&#34;&gt;&lt;code&gt;Universal Reference&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Q: 什么是&lt;code&gt;Universal Reference&lt;/code&gt;?
A: 形如&lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;不含有任何的cv限定符, 且&lt;code&gt;T&lt;/code&gt;需要被推导
G1.
&lt;blockquote&gt;
&lt;p&gt;If a variable or parameter is declared to have type T&amp;amp;&amp;amp; for some deduced type T, that variable or parameter is a universal reference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43;笔记：STL容器迭代器失效场景</title>
      <link>/posts/cppnotes-iterator-invalidation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/cppnotes-iterator-invalidation/</guid>
      <description>&lt;h2 id=&#34;cheatsheet&#34;&gt;CheatSheet&lt;/h2&gt;
&lt;p&gt;(完整版见下面 Ref1 or cppref)
note:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;顺序型容器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;deque插入or删除操作会导致迭代器失效.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43;笔记：STL相关</title>
      <link>/posts/cppnotes-stl-misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/cppnotes-stl-misc/</guid>
      <description>this is a post of misc items of stl.
  behavior of operator[] of vector and map:
  auto in for-statement:
   </description>
    </item>
    
    <item>
      <title>db笔记 - sse</title>
      <link>/posts/db_talk_about_sse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/db_talk_about_sse/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;background&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;we would set env var &lt;code&gt;USE_SSE=1&lt;/code&gt; when compiling Rocksdb, OTHERWISE it would always failed
at linking stage where encountering errors of lack of some instructions such as:
&lt;code&gt;no such instruction: &lt;/code&gt;shlx %rdx,%rax,%rax&#39;`.
but what the fuck is USE_SSE ?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>db笔记 - 事务1:隔离级别</title>
      <link>/posts/db_txn_lec1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/db_txn_lec1/</guid>
      <description>&lt;h2 id=&#34;锁&#34;&gt;锁&lt;/h2&gt;
&lt;p&gt;read lock
write lock
long duration lock
short duration lock&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>systemtap笔记</title>
      <link>/posts/debugging_systemtap_cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/debugging_systemtap_cheatsheet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>笔记：systemtap相关</title>
      <link>/posts/debugging_use-systemtap-to-debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/debugging_use-systemtap-to-debug/</guid>
      <description>&lt;p&gt;本文会提及systemtap的以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何列出某个可执行文件的所有probe位点&lt;/li&gt;
&lt;li&gt;如何取变量的值&lt;/li&gt;
&lt;li&gt;如何通过某个地址的解引用取得对应值&lt;/li&gt;
&lt;li&gt;如何在.return中拿到变量的最新值&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>笔记：一些日常cheatsheet</title>
      <link>/posts/db_dailywork_cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/db_dailywork_cheatsheet/</guid>
      <description>&lt;h2 id=&#34;cheatsheet&#34;&gt;cheatsheet&lt;/h2&gt;
&lt;p&gt;my cheatsheet for daily work usages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;top&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tasr&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sar&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
